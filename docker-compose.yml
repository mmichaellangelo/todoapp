services:
  proxy:
    image: jwilder/nginx-proxy
    ports:
      - 80:80
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - todo
    logging:
      driver: "none"

  api:
    build:
      context: ./backend_api/
      dockerfile: Dockerfile
    expose: 
      - 80
    volumes:
      - ./backend_api/:/app/
    depends_on:
      - proxy
      - db
    environment:
      VIRTUAL_HOST: api.dev.localhost
      VIRTUAL_PORT: 80
    networks:
      - todo

  db:
    image: postgres
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: mike
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
      PGDATA: /var/lib/postgresql/data/pgdata
      VIRTUAL_HOST: db.dev.localhost
      VIRTUAL_PORT: 5432
    expose:
      - 5432
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    depends_on:
      - proxy
    networks:
      - todo

  adminer:
    image: adminer
    restart: unless-stopped
    depends_on:
      - db
      - proxy
    expose: 
      - 8080
    environment:
      VIRTUAL_HOST: adminer.dev.localhost
      VIRTUAL_PORT: 8080
    networks:
      - todo
    
  frontend_web:
    container_name: frontend_web
    build:
      context: ./frontend_web
      dockerfile: Dockerfile
    volumes:
      - ./frontend_web:/app
      - /app/node_modules
    expose:
      - 80
    environment:
      VIRTUAL_HOST: dev.localhost
      VIRTUAL_PORT: 80
    depends_on:
      - api
      - proxy
    networks:
      - todo

networks:
  todo:

volumes:
  pgdata: